#!/bin/bash

set -e

mac_specific_install() {
  # install Homebrew
  print_header "Installing Homebrew"
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  # install git via Homebrew
  print_header "Installing git"
  brew install git
  # install node and npm via Homebrew
  print_header "Installing Node and NPM"
  brew install node
  # install tmux via Homebrew
  print_header "Installing tmux"
  brew install tmux
  # install zsh via Homebrew
  print_header "Installing zsh"
  brew install zsh
  # install bat for better cat/less
  print_header "Installing bat"
  brew install bat
  # install source-code-pro font required for terminal profile
  brew tap homebrew/cask-fonts && brew cask install font-source-code-pro
  # install coreutils
  brew install coreutils
  # configure system settings
  # allow quitting finder via Command-Q, this hides Desktop icons/files
  defaults write com.apple.finder QuitMenuItem -bool true
}

ubuntu_specific_install() {
  # update package lists
  print_header "Updating package lists"
  sudo apt update
  # upgrade packages
  print_header "Upgrading packages"
  sudo apt upgrade -y
  #install git via apt
  print_header "Installing git"
  sudo apt install -y git
  # install node and npm via apt
  print_header "Installing Node and NPM"
  curl -sL https://deb.nodesource.com/setup_8.x | sudo bash
  sudo apt update
  sudo apt install -y nodejs
  # install tmux via apt
  print_header "Installing tmux"
  sudo apt install -y tmux
  # install zsh via apt
  print_header "Installing zsh"
  sudo apt install -y zsh
}

# source helper function for printing
source aliases/printheader

# determine OS and perform OS specific install
print_header "Begining Installation"
PS3='Please select your OS: '
options=("Mac" "Ubuntu" "Other/Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Mac")
            mac_specific_install
            break
            ;;
        "Ubuntu")
            ubuntu_specific_install
            break
            ;;
        "Quit")
            exit 1
            ;;
        *)
            echo "[ERROR] Invalid Option: $REPLY, exiting."
            exit 1
            ;;
    esac
done

# now that zsh is installed, make it default shell
print_header "Setting zsh as default shell"
echo $(which zsh) | sudo tee -a /etc/shells
chsh -s $(which zsh)

# install oh-my-zsh
print_header "Installing oh-my-zsh"
set +e
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
set -e

# install pure-prompt
print_header "Installing pure-prompt"
sudo npm install --global pure-prompt --allow-root --unsafe-perm=true

# install zsh-syntax-highlighting oh-my-zsh plugin, ignore error if exists
print_header "Installing zsh-syntax-highlighting plugin"
set +e
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
set -e

# setup gitconfig
print_header "Setting up gitconfig"
echo -n "Enter your GitHub username for your gitconfig: "
read GITHUB_USERNAME

echo -n "Enter your GitHub email for your gitconfig: "
read GITHUB_EMAIL

cp configs/gitconfig ~/.gitconfig
sed -i -e "s/GIT_USERNAME_PLACEHOLDER/$GITHUB_USERNAME/g" ~/.gitconfig
sed -i -e "s/GIT_EMAIL_PLACEHOLDER/$GITHUB_EMAIL/g" ~/.gitconfig

# setup tmux.conf
print_header "Setting up tmux.conf"
cp configs/tmux.conf ~/.tmux.conf

# setup aliases
print_header "Setting up aliases"
rm -rf ~/.dotfiles_aliases
cp -r aliases ~/.dotfiles_aliases

# setup zshrc
print_header "Setting up zshrc"
cp configs/zshrc ~/.zshrc

print_header "Setup completed successfully"
